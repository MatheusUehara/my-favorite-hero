// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    if (!project.hasProperty('marvel_repository')) {
        ext.marvel_url = '"https://gateway.marvel.com/"'
        def props = new Properties()
        file('credentials.properties').withInputStream { props.load(it) }
        ext.marvel_public_key = '"' + props.getProperty('marvel.public.key') + '"'
        ext.marvel_private_key = '"' + props.getProperty('marvel.private.key') + '"'
    }

    ext{
        design = "29.0.0"
        room_version = "2.2.0-rc01"
        kotlin_version = '1.3.41'
        gradle_version = '3.5.0'
        appcompat = '1.1.0-rc01'
        core_ktx = '1.2.0-alpha02'
        constraintlayout = '1.1.3'
        recyclerview="1.0.0"
        picasso="2.71828"
        picasso_transformations="2.2.1"
        shimmer="0.4.0"
        timber="4.7.1"
        koin="2.0.1"
        retrofit="2.5.0"
        converter_gson="2.5.0"
        logging_interceptor="3.12.1"
        okhttp="3.12.1"
        adapter_rxjava2="2.3.0"
        rx_android="2.1.1"
        rx_kotlin="2.3.0"
        lifecycle_extensions="2.2.0-alpha02"
        material="1.0.0"
        legacy_support_v4="1.0.0"
        junit="4.12"
        runner="1.1.1"
        espresso_core="3.1.1"
        navigation="2.1.0-beta02"
        espresso_contrib = "2.2"
        core_testing = "2.0.0"
        androidx_test_rules = "1.1.0"
        fragment_testing = "1.1.0"
        mockk = "1.8.13"
    }

    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
